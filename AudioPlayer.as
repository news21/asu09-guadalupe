package{	import flash.display.*;	import flash.events.*;    import flash.net.*;    import flash.utils.*;    	import flash.text.*;	import flash.media.*;	import com.flashdo.flashblue.XMLLoader;	import com.everydayflash.equalizer.*;	import com.everydayflash.equalizer.color.*;	//Caurina Tweener	import caurina.transitions.Tweener; 	public class AudioPlayer extends MovieClip	{ 		public var xmlLoader:XMLLoader;		public var xmlUrl:String;		public var preloader_mc:PreloaderMC;				public var holder_mc:MovieClip;		public var button_width:int = 230;		public var button_padding:int = 10;				public var item:Array = [];				private var urlPath:String;		private var snd:Sound;		private var es:EqualizerSettings;		private var e_q:Equalizer;				public function AudioPlayer(xml_url:String,urlP:String= '') 		{			xmlUrl = xml_url;			urlPath = urlP;		} 				//Initialize Banner		public function init(e:Event=null):void		{						trace('init');						es = new EqualizerSettings();			es.numOfBars = 16;			es.height = 64;			es.barSize = 10;			es.vgrid = true;			es.hgrid = 2;			es.colorManager = new GradientBarColor();			es.effect = EqualizerSettings.FX_REFLECTION;						e_q = new Equalizer();			e_q.update(es);			e_q.x = 170;			e_q.y = 170;			addChild(e_q);			this.addEventListener(Event.ENTER_FRAME, e_q.render);									holder_mc = new MovieClip();			addChild(holder_mc);						//Preloader			preloader_mc = new PreloaderMC();			preloader_mc.x = 250;			preloader_mc.y = 188;			preloader_mc.alpha = 0;			preloader_mc.mouseEnabled = false;			preloader_mc.percent_txt.selectable = false;						holder_mc.addChild(preloader_mc);						//Main Preloader			root.loaderInfo.addEventListener(Event.OPEN, setOpen);			root.loaderInfo.addEventListener(ProgressEvent.PROGRESS, setProgresses);			root.loaderInfo.addEventListener(Event.COMPLETE, onComplete);			}				//onComplete		private function onComplete(e:Event):void		{			trace('onComplete');			//Remove Event Listeners			e.target.removeEventListener(Event.OPEN, setOpen);			e.target.removeEventListener(ProgressEvent.PROGRESS, setProgresses);			e.target.removeEventListener(Event.COMPLETE, onComplete);			//Hide Preloader			Tweener.addTween(preloader_mc,{alpha:0,delay:0.3,time:0.3,							 		onComplete:function(){										this.visible = false;									}								}							);			//Load XML			loadXML();		}				//Loads XML file and pushes data into array		public function loadXML():void 		{			trace('loadXML');			xmlLoader = new XMLLoader(urlPath+xmlUrl);            xmlLoader.addEventListener(XMLLoader.XML_LOADED, onXMLLoaded);            xmlLoader.load();					}				//onXMLLoaded		private function onXMLLoaded(e:Event):void 		{						trace('onXMLLoaded');			//Remove XML Load Event Listener			xmlLoader.removeEventListener(XMLLoader.XML_LOADED, onXMLLoaded);			//Read XML Data			var xml:XML = xmlLoader.getXML();			var i:int = 0;						var bgurl:String =urlPath+xml.image.@url;			trace('has '+xml.clips.clip.length()+' clips');			//Items			for (i=0; i<xml.clips.clip.length(); i++) {								item[i] = new Object();				item[i].audio = urlPath+xml.clips.clip[i].audio.toString();				item[i].title = xml.clips.clip[i].title.toString();								var button_mc:ButtonAudio = new ButtonAudio();				button_mc.name = "button_"+i;				button_mc.id = i;				button_mc.txt.text = String(item[i].title);				button_mc.txt.width = button_width;				button_mc.bg_holder.height = button_mc.txt.height + 4;				button_mc.y = 300;				button_mc.bg_holder.width = button_width;				button_mc.x = 10 + ((button_mc.bg_holder.width+button_padding)*i); // max clips 2				button_mc.alpha = .7;								button_mc.mouseChildren = false;				button_mc.buttonMode = true;				button_mc.addEventListener(MouseEvent.CLICK, buttonDown);				button_mc.addEventListener(MouseEvent.MOUSE_OVER, buttonOver);				button_mc.addEventListener(MouseEvent.MOUSE_OUT, buttonOut);					holder_mc.addChild(button_mc);																/*					var s:Sound = new Sound(new URLRequest("track.mp3"));					s.play(0, 100, new SoundTransform(1, 0));										var es:EqualizerSettings = new EqualizerSettings();					es.numOfBars = 32;					es.height = 64;					es.barSize = 2;					es.vgrid = true;					es.hgrid = 2;					es.colorManager = new SolidBarColor(0xffff4444);					es.effect = EqualizerSettings.FX_REFLECTION;										var e:Equalizer = new Equalizer();					e.update(es);					e.x = 100;					e.y = 100;					addChild(e);										addEventListener(Event.ENTER_FRAME, e.render);				*/												trace('item '+i);			}						var bgLoader:Loader = new Loader();			bgLoader.load(new URLRequest(bgurl));			addChildAt(bgLoader,0);											trace('2');		}				public function unloadAudio():void		{			SoundMixer.stopAll();		}				private function buttonDown(e:MouseEvent):void		{			SoundMixer.stopAll();			trace('should go to '+ item[e.target.id].audio);			snd = new Sound(new URLRequest(item[e.target.id].audio));			snd.play(0, 100, new SoundTransform(1, 0));		}				private function buttonOver(e:MouseEvent):void		{			var button_mc = holder_mc.getChildByName("button_"+e.target.id);			Tweener.addTween(button_mc.thumb_mc,{alpha:1,time:0.15,transition:"linear"});		}				private function buttonOut(e:MouseEvent):void		{			var button_mc = holder_mc.getChildByName("button_"+e.target.id);			Tweener.addTween(button_mc.thumb_mc,{alpha:0.5,time:0.15,transition:"linear"});		}										private function setOpen(e:Event):void		{			//Preloader			preloader_mc.visible = true;			preloader_mc.percent_txt.text = "0";			preloader_mc.percent_mc.mask_right_mc.rotation = 0;			preloader_mc.percent_mc.mask_left_mc.rotation = -180;			Tweener.addTween(preloader_mc,{alpha:1,delay:0.3,time:0.3});		}						//Show percent		private function setProgresses(e:ProgressEvent):void		{			var percent:int = Math.ceil((e.bytesLoaded/e.bytesTotal)*100);			preloader_mc.percent_txt.text = percent.toString();			if (percent<=50) {				preloader_mc.percent_mc.mask_right_mc.rotation = 3.6*percent;				preloader_mc.percent_mc.mask_left_mc.rotation = -180;			} else {				preloader_mc.percent_mc.mask_right_mc.rotation = 180;				preloader_mc.percent_mc.mask_left_mc.rotation = 3.6*percent;			}		}				//Image loading on complete		private function setComplete(e:Event):void		{			//Remove loader events			e.target.removeEventListener(Event.OPEN,setOpen);			e.target.removeEventListener(ProgressEvent.PROGRESS, setProgresses);			e.target.removeEventListener(Event.COMPLETE,setComplete);									//Hide preloader			Tweener.addTween(preloader_mc,{alpha:0,delay:0.3,time:0.3,							 		onComplete:function(){										this.visible = false;									}								}							);					}			} }