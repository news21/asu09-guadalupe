package{	import flash.display.*;	import flash.events.*;    import flash.net.*;    import flash.utils.*;    	import flash.text.*;	import com.flashdo.flashblue.XMLLoader;	//Caurina Tweener	import caurina.transitions.Tweener; 	public class LinksDisplay extends MovieClip	{ 		public var xmlLoader:XMLLoader;		public var xmlUrl:String;		public var holder_mc:MovieClip;		public var preloader_mc:PreloaderMC;		public var button_width:int = 246;		public var button_height:int = 75;		public var item:Array = [];		private var urlPath:String;				public function LinksDisplay(xml_url:String,urlP:String= '') 		{			xmlUrl = xml_url;			urlPath = urlP;		} 				//Initialize Banner		public function init(e:Event=null):void		{						trace('init');						holder_mc = new MovieClip();			addChild(holder_mc);						//Preloader			preloader_mc = new PreloaderMC();			preloader_mc.x = 250;			preloader_mc.y = 188;			preloader_mc.alpha = 0;			preloader_mc.mouseEnabled = false;			preloader_mc.percent_txt.selectable = false;						holder_mc.addChild(preloader_mc);						//Main Preloader			root.loaderInfo.addEventListener(Event.OPEN, setOpen);			root.loaderInfo.addEventListener(ProgressEvent.PROGRESS, setProgresses);			root.loaderInfo.addEventListener(Event.COMPLETE, onComplete);			}				//onComplete		private function onComplete(e:Event):void		{			trace('onComplete');			//Remove Event Listeners			e.target.removeEventListener(Event.OPEN, setOpen);			e.target.removeEventListener(ProgressEvent.PROGRESS, setProgresses);			e.target.removeEventListener(Event.COMPLETE, onComplete);			//Hide Preloader			Tweener.addTween(preloader_mc,{alpha:0,delay:0.3,time:0.3,							 		onComplete:function(){										this.visible = false;									}								}							);			//Load XML			loadXML();		}				//Loads XML file and pushes data into array		public function loadXML():void 		{			trace('loadXML');			xmlLoader = new XMLLoader(xmlUrl);            xmlLoader.addEventListener(XMLLoader.XML_LOADED, onXMLLoaded);            xmlLoader.load();					}				//onXMLLoaded		private function onXMLLoaded(e:Event):void 		{						trace('onXMLLoaded');			//Remove XML Load Event Listener			xmlLoader.removeEventListener(XMLLoader.XML_LOADED, onXMLLoaded);			//Read XML Data			var xml:XML = xmlLoader.getXML();			var i:int = 0;			var row:int = 0;			var col:int = 0;			var theight:int = 75;						//Items			for (i=0; i<xml.link.length(); i++) {				trace(xml.link[i].image)								if(i>0 && (i+1)%2 == 1)					row++;									col = i%2;				trace(row+','+col);									item[i] = new Object();				item[i].image = urlPath+xml.link[i].image.toString();				item[i].title = xml.link[i].title.toString();				item[i].description = xml.link[i].description.toString();				item[i].url = xml.link[i].url.toString();				item[i].target = xml.link[i].target.toString();								var button_mc:ButtonMC = new ButtonMC();				button_mc.name = "button_"+i;				button_mc.id = i;				button_mc.x = col*button_width;				button_mc.y = row*button_height;				button_mc.border.width = button_width;				button_mc.bg_mc.width = button_width;								button_mc.mouseChildren = false;				button_mc.buttonMode = true;				//Thumbnail Loader				var thumbLoader:Loader = new Loader();				thumbLoader.load(new URLRequest(item[i].image));				button_mc.thumb_mc.alpha = 0.5;				button_mc.thumb_mc.addChild(thumbLoader);													button_mc.addEventListener(MouseEvent.CLICK, buttonDown);				button_mc.addEventListener(MouseEvent.MOUSE_OVER, buttonOver);				button_mc.addEventListener(MouseEvent.MOUSE_OUT, buttonOut);					holder_mc.addChild(button_mc);												trace('item '+i);			}			trace('2');		}						private function buttonDown(e:MouseEvent):void		{			trace('should go to '+ item[e.target.id].url);			var request:URLRequest = new URLRequest(item[e.target.id].url);			navigateToURL(request, '_blank');		}				private function buttonOver(e:MouseEvent):void		{			var button_mc = holder_mc.getChildByName("button_"+e.target.id);			Tweener.addTween(button_mc.thumb_mc,{alpha:1,time:0.15,transition:"linear"});		}				private function buttonOut(e:MouseEvent):void		{			var button_mc = holder_mc.getChildByName("button_"+e.target.id);			Tweener.addTween(button_mc.thumb_mc,{alpha:0.5,time:0.15,transition:"linear"});		}				private function setOpen(e:Event):void		{			//Preloader			preloader_mc.visible = true;			preloader_mc.percent_txt.text = "0";			preloader_mc.percent_mc.mask_right_mc.rotation = 0;			preloader_mc.percent_mc.mask_left_mc.rotation = -180;			Tweener.addTween(preloader_mc,{alpha:1,delay:0.3,time:0.3});		}						//Show percent		private function setProgresses(e:ProgressEvent):void		{			var percent:int = Math.ceil((e.bytesLoaded/e.bytesTotal)*100);			preloader_mc.percent_txt.text = percent.toString();			if (percent<=50) {				preloader_mc.percent_mc.mask_right_mc.rotation = 3.6*percent;				preloader_mc.percent_mc.mask_left_mc.rotation = -180;			} else {				preloader_mc.percent_mc.mask_right_mc.rotation = 180;				preloader_mc.percent_mc.mask_left_mc.rotation = 3.6*percent;			}		}				//Image loading on complete		private function setComplete(e:Event):void		{			//Remove loader events			e.target.removeEventListener(Event.OPEN,setOpen);			e.target.removeEventListener(ProgressEvent.PROGRESS, setProgresses);			e.target.removeEventListener(Event.COMPLETE,setComplete);									//Hide preloader			Tweener.addTween(preloader_mc,{alpha:0,delay:0.3,time:0.3,							 		onComplete:function(){										this.visible = false;									}								}							);					}			} }